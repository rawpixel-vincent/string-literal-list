var h=Object.defineProperty;var y=Object.getOwnPropertyDescriptor;var g=Object.getOwnPropertyNames;var _=Object.prototype.hasOwnProperty;var u=(n,e)=>h(n,"name",{value:e,configurable:!0});var d=(n,e)=>{for(var t in e)h(n,t,{get:e[t],enumerable:!0})},j=(n,e,t,r)=>{if(e&&typeof e=="object"||typeof e=="function")for(let s of g(e))!_.call(n,s)&&s!==t&&h(n,s,{get:()=>e[s],enumerable:!(r=y(e,s))||r.enumerable});return n};var A=n=>j(h({},"__esModule",{value:!0}),n);var C={};d(C,{default:()=>v,sl:()=>b,stringList:()=>w});module.exports=A(C);var m=Object.defineProperty,E=u((n,e,t)=>e in n?m(n,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):n[e]=t,"w"),l=u((n,e)=>m(n,"name",{value:e,configurable:!0}),"a"),O=u((n,e,t)=>E(n,typeof e!="symbol"?e+"":e,t),"l"),o=l((n,e)=>{if(n&&e&&Object.isFrozen(n)){/* c8 ignore next 3 @preserve */return Object.freeze(e)}return e},"freezeIfImmutable"),p=l(n=>`Using ${n}() method on a string list will mutate the original list in place. The code relying on this list will behave unexpectedly and may lead to unsafe execution.`,"mutationWarning"),a=l(()=>typeof console=="object"&&console&&typeof console.warn=="function"&&(typeof window>"u"&&typeof process=="object"&&process&&typeof process.env=="object"&&process.env&&!0&&"production"&&!1||typeof window=="object"&&window&&"__NEXT_DATA__"in window&&typeof window.__NEXT_DATA__=="object"&&window.__NEXT_DATA__&&"runtimeConfig"in window.__NEXT_DATA__&&typeof window.__NEXT_DATA__.runtimeConfig=="object"&&window.__NEXT_DATA__.runtimeConfig&&"environment"in window.__NEXT_DATA__.runtimeConfig&&typeof window.__NEXT_DATA__.runtimeConfig.environment=="string"&&window.__NEXT_DATA__.runtimeConfig.environment!=="prod"),"shouldWarn"),i,f=(i=class extends Array{constructor(...e){let t=[],r=[];for(let s of e.flat())typeof s=="string"&&(t.push([s,s]),r.push(s));super(...r),O(this,"enum"),this.enum=Object.fromEntries(t),Object.freeze(this.enum),Object.defineProperty(this,"enum",{writable:!0,configurable:!1,enumerable:!1})}includes(e,t=0){return this.length===0?!1:t!==0&&typeof t=="number"&&(t>0||t>=this.length*-1)?super.includes(e,t):typeof this.enum[e]=="string"}concat(...e){return o(this,new i(...super.concat.apply(this,e.flat())))}concatList(e){return this.concat(...e)}toSorted(){return o(this,new i(...super.toSorted.apply(this,arguments)))}toReversed(){return o(this,new i(...super.toReversed.apply(this,arguments)))}toSpliced(){return o(this,new i(...super.toSpliced.apply(this,arguments)))}slice(){return o(this,new i(...super.slice.apply(this,arguments)))}without(...e){let t=e.flat().map(r=>typeof r=="string"?r:typeof r=="number"?String(r):void 0);return o(this,new i(...this.filter(r=>!t.includes(r))))}withTrim(){return o(this,new i(...super.map(e=>e.trim())))}withPrefix(e=""){return o(this,new i(...super.map(t=>`${e}${t}`)))}withSuffix(e=""){return o(this,new i(...super.map(t=>`${t}${e}`)))}withReplace(e,t=void 0){return o(this,new i(...super.map(r=>r.replace(e,t))))}withReplaceAll(e,t=void 0){return o(this,new i(...super.map(r=>r.replaceAll(e,t))))}toLowerCase(){return o(this,new i(...super.map(e=>e.toLowerCase())))}toUpperCase(){return o(this,new i(...super.map(e=>e.toUpperCase())))}toCapitalize(){return this.withReplace(/\b\w/g,e=>e.toUpperCase())}toUnCapitalize(){return this.withReplace(/\b\w/g,e=>e.toLowerCase())}value(e){if(typeof e!="string")throw new Error(`Invalid value ${e}`);if(this.enum[e]===e)return this.enum[e];throw new Error(`Invalid value ${e}`)}mutable(){return Array.from(this)}compat(){return new i(...Array.from(this))}happy(){return new i(...Array.from(this))}stringList(){return new i(...Array.from(this))}toRecordValue(e=void 0,...t){return Object.assign({},...t,Object.fromEntries(super.map(r=>{try{return[r,typeof e=="object"&&e!==null?Array.isArray(e)?[...e]:typeof structuredClone=="function"?structuredClone(e):{...e}:e]}catch(s){return[r,e]}})))}mapAsObject(e){return Object.fromEntries(super.map(t=>[t,e(t)]))}toRecordType(e="any",t=void 0,...r){return Object.assign({},...r,Object.fromEntries(super.map(s=>{try{return[s,typeof t=="object"&&t!==null?Array.isArray(t)?[...t]:typeof structuredClone=="function"?structuredClone(t):{...t}:t]}catch(z){return[s,t]}})))}asMap(){return new Map(super.map(e=>[e,e]))}asSet(){return new Set(this)}asObject(){return Object.assign({},...super.map(e=>({[e]:e})))}map(){let e=this.mutable();return e.map.apply(e,arguments)}filter(){let e=this.mutable();return e.filter.apply(e,arguments)}reduce(){let e=this.mutable();return e.reduce.apply(e,arguments)}reduceRight(){let e=this.mutable();return e.reduceRight.apply(e,arguments)}flat(){let e=this.mutable();return e.flat.apply(e,arguments)}flatMap(){let e=this.mutable();return e.flatMap.apply(e,arguments)}with(){let e=this.mutable();return e.with.apply(e,arguments)}push(){if(a()&&console.warn(p("push")),Object.isFrozen(this))throw new Error("Cannot set properties on a frozen object");{let e=this.mutable();e.push.apply(e,arguments),super.push.apply(this,arguments),this.enum=Object.fromEntries(this.map(t=>[t,t])),Object.freeze(this.enum)}return this.length}shift(){if(a()&&console.warn(p("shift")),Object.isFrozen(this))throw new Error("Cannot set properties on a frozen object");{let e=this.mutable(),t=e.shift.apply(e,arguments);return super.shift.apply(this,arguments),this.enum=Object.fromEntries(this.map(r=>[r,r])),Object.freeze(this.enum),t}}unshift(){if(a()&&console.warn(p("unshift")),Object.isFrozen(this))throw new Error("Cannot set properties on a frozen object");{let e=this.mutable();e.unshift.apply(e,arguments),super.unshift.apply(this,arguments),this.enum=Object.fromEntries(this.map(t=>[t,t])),Object.freeze(this.enum)}return this.length}copyWithin(){if(a()&&console.warn(p("copyWithin")),Object.isFrozen(this))throw new Error("Cannot set properties on a frozen object");{let e=this.mutable();e.copyWithin.apply(e,arguments),super.copyWithin.apply(this,arguments),this.enum=Object.fromEntries(this.map(t=>[t,t])),Object.freeze(this.enum)}return this}pop(){if(a()&&console.warn(p("pop")),Object.isFrozen(this))throw new Error("Cannot set properties on a frozen object");{let e=this.mutable(),t=e.pop.apply(e,arguments);return super.pop.apply(this,arguments),this.enum=Object.fromEntries(this.map(r=>[r,r])),Object.freeze(this.enum),t}}fill(){if(a()&&console.warn(p("fill")),Object.isFrozen(this))throw new Error("Cannot set properties on a frozen object");{let e=this.mutable();e.fill.apply(e,arguments),super.fill.apply(this,arguments),this.enum=Object.fromEntries(this.map(t=>[t,t])),Object.freeze(this.enum)}return this}splice(){if(a()&&console.warn(p("splice")),Object.isFrozen(this))throw new Error("Cannot set properties on a frozen object");{let e=this.mutable(),t=e.splice.apply(e,arguments);return super.splice.apply(this,arguments),this.enum=Object.fromEntries(this.map(r=>[r,r])),Object.freeze(this.enum),t}}reverse(){if(a()&&console.warn(p("reverse")),Object.isFrozen(this))throw new Error("Cannot set properties on a frozen object");{let e=this.mutable();e.reverse.apply(e,arguments),super.reverse.apply(this,arguments),this.enum=Object.fromEntries(this.map(t=>[t,t])),Object.freeze(this.enum)}return this}},u(i,"n"),i);l(f,"SL");var T=f,N=Object.freeze({push:"push",unshift:"unshift",shift:"shift",copyWithin:"copyWithin",pop:"pop",fill:"fill",splice:"splice",reverse:"reverse"});function c(...n){let e=n,t=n.some(r=>typeof r!="string");return n.length&&t&&(typeof console=="object"&&console&&typeof console.warn=="function"&&(typeof window>"u"&&typeof process=="object"&&process&&typeof process.env=="object"&&process.env&&!1||typeof window=="object"&&window&&"__NEXT_DATA__"in window&&typeof window.__NEXT_DATA__=="object"&&window.__NEXT_DATA__&&"runtimeConfig"in window.__NEXT_DATA__&&typeof window.__NEXT_DATA__.runtimeConfig=="object"&&window.__NEXT_DATA__.runtimeConfig&&"environment"in window.__NEXT_DATA__.runtimeConfig&&typeof window.__NEXT_DATA__.runtimeConfig.environment=="string"&&window.__NEXT_DATA__.runtimeConfig.environment!=="prod")&&console.warn(`Unexpected type in stringList(${typeof t}). Casting all arguments to string type.`),e=n.flatMap(r=>Array.isArray(r)?r.filter(s=>typeof s=="string"||typeof s=="number").map(s=>String(s)):typeof r=="string"?[r]:typeof r=="number"?[String(r)]:[])),new T(...e)}u(c,"h");l(c,"stringListMutable");var w=c,b=c,v={stringList:w,sl:b};
